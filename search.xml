<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>纯小白使用hexo搭建网站可能遇到的坑</title>
    <url>/2023/03/17/%E2%80%9D%E7%BA%AF%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E2%80%9C/</url>
    <content><![CDATA[<h3 id="1-HEXO个人博客发布遇到问题，hexo-d错误：fatal-unable-to-auto-detect-email-address"><a href="#1-HEXO个人博客发布遇到问题，hexo-d错误：fatal-unable-to-auto-detect-email-address" class="headerlink" title="1 HEXO个人博客发布遇到问题，hexo d错误：fatal: unable to auto-detect email address"></a>1 HEXO个人博客发布遇到问题，hexo d错误：fatal: unable to auto-detect email address</h3><h5 id="1-1-出现问题的主要error："><a href="#1-1-出现问题的主要error：" class="headerlink" title="1.1 出现问题的主要error："></a>1.1 出现问题的主要error：</h5><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">error: </span>failed to push some refs to &quot;https://github.com/xxxxxxxx&quot;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h5 id="1-2-解决方法："><a href="#1-2-解决方法：" class="headerlink" title="1.2 解决方法："></a>1.2 解决方法：</h5><ul>
<li>在资源管理器种显示隐藏项目</li>
<li>进入博客目录的“.deploy_git.git”子目录，进入config文件</li>
<li>打开config文件，添加如下内容</li>
<li>[user]<br>email&#x3D;Github邮箱<br>name&#x3D;Github用户名</li>
</ul>
<h3 id="2-xxx-packages-are-looking-for-funding"><a href="#2-xxx-packages-are-looking-for-funding" class="headerlink" title="2. xxx packages are looking for funding"></a>2. xxx packages are looking for funding</h3><h5 id="2-1-出现问题的主要代码："><a href="#2-1-出现问题的主要代码：" class="headerlink" title="2.1 出现问题的主要代码："></a>2.1 出现问题的主要代码：</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">xxx packages are looking <span class="keyword">for</span> funding</span><br><span class="line">	<span class="built_in">run</span> <span class="string">&#x27;npm fund&#x27;</span> <span class="keyword">for</span> details</span><br></pre></td></tr></table></figure>

<h5 id="2-2-解决方法："><a href="#2-2-解决方法：" class="headerlink" title="2.2 解决方法："></a>2.2 解决方法：</h5><ul>
<li>该提示与install过程无关，是下载完成后，因有开发者希望可以得到捐赠，此时会提示你是否要进行打赏。</li>
<li>虽然可以通过<code>npm install --no-fund</code>来取消该提示的出现，但本人输入该指令后，hexo部署失败，仍不知原因。故不建议尝试。</li>
</ul>
<h3 id="3-hexo-本地与部署显示不一致问题"><a href="#3-hexo-本地与部署显示不一致问题" class="headerlink" title="3. hexo 本地与部署显示不一致问题"></a>3. hexo 本地与部署显示不一致问题</h3><h5 id="3-1-出现问题主要体现"><a href="#3-1-出现问题主要体现" class="headerlink" title="3.1 出现问题主要体现"></a>3.1 出现问题主要体现</h5><ul>
<li>在配置本地搜索时，部署过去的local search显示出现异常，与本地显示不一样。</li>
</ul>
<h5 id="3-2-解决方法"><a href="#3-2-解决方法" class="headerlink" title="3.2 解决方法"></a>3.2 解决方法</h5><ul>
<li><p>修改本地配置文件_config.yml中的url</p>
</li>
<li><pre><code>  # URL
  ## If your site is put in a subdirectroy, set url as &quot;http://yoursite.com/child&quot; and root as &quot;/child/&quot;
  url: http://yourname.github.io
  root:/
</code></pre>
</li>
</ul>
]]></content>
      <categories>
        <category>Set up a blog</category>
        <category>Solutions to Problems</category>
      </categories>
  </entry>
  <entry>
    <title>CDMA-数据通信</title>
    <url>/2023/03/20/CDMA-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h2 id="CDMA"><a href="#CDMA" class="headerlink" title="CDMA"></a>CDMA</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>每个站分配的码片序列不仅必须各不相同，而且需相互正交</p>
]]></content>
      <categories>
        <category>Junior</category>
        <category>Data Communications</category>
      </categories>
  </entry>
  <entry>
    <title>图像异常检测研究现状综述</title>
    <url>/2023/03/18/%E5%9B%BE%E5%83%8F%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E7%BB%BC%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="图像异常检测研究现状综述"><a href="#图像异常检测研究现状综述" class="headerlink" title="图像异常检测研究现状综述"></a>图像异常检测研究现状综述</h1><h2 id="吕承侃-沈飞-张正涛-张峰-自动化学报-2022"><a href="#吕承侃-沈飞-张正涛-张峰-自动化学报-2022" class="headerlink" title="吕承侃, 沈飞, 张正涛, 张峰. 自动化学报, 2022"></a>吕承侃, 沈飞, 张正涛, 张峰. 自动化学报, 2022</h2><span id="more"></span>

<h3 id="一-研究背景"><a href="#一-研究背景" class="headerlink" title="一. 研究背景"></a>一. 研究背景</h3><h4 id="1-1-主要内容"><a href="#1-1-主要内容" class="headerlink" title="1.1 主要内容"></a>1.1 主要内容</h4><h5 id="1-1-1"><a href="#1-1-1" class="headerlink" title="1.1.1"></a>1.1.1</h5><ul>
<li>图像异常检测是<strong>计算机视觉</strong>领域课题。</li>
<li>在<strong>不使用真实异常样本</strong>的情况下，利用<strong>现有的正常样本构建</strong>模型以检测可能出现的各种异常情况。</li>
<li>工业外观缺陷检测、医学图像分析、高光谱图像处理等领域。</li>
</ul>
<h5 id="1-1-2-行文结构"><a href="#1-1-2-行文结构" class="headerlink" title="1.1.2 行文结构"></a>1.1.2 行文结构</h5><ul>
<li>第 1 节将介绍异常的定义以及常见的形态。</li>
<li>第 2 节根据模型构建过程中有无神经网络的参与, 将现有的图像异常检测算法分为传统方法和基于深度学习两大类并分别进行综述与分析。</li>
<li>第 3 节将介绍图像异常检测中常用的数据集。</li>
<li>第 4 节将介绍在图像异常检测当中面临的主要挑战。</li>
<li>第 5 节将综合图像异常检测的研究现状对未来可能的发展方向进行展望.。</li>
</ul>
<h4 id="1-2-研究情况"><a href="#1-2-研究情况" class="headerlink" title="1.2 研究情况"></a>1.2 研究情况</h4><ul>
<li><p>早期的异常检测算法大多应用于<strong>数据挖掘</strong>领域。</p>
</li>
<li><p>传统的目标检测算法很大一部分属于<strong>监督学习</strong>的范畴。</p>
<ul>
<li>监督学习：需要搜集足够的目标类别样本并进行精确的标注。</li>
</ul>
</li>
<li><p>在异常检测中模型是通过<strong>分析与正常样本之间的差异</strong>来检测异常样本</p>
</li>
<li><p>图像异常检测的应用领域如下表所示：</p>
<table>
<thead>
<tr>
<th>应用领域</th>
<th>具体应用</th>
</tr>
</thead>
<tbody><tr>
<td>缺陷检测</td>
<td>产品表面检测包括布匹、玻璃、钢板、水泥等纹理表面以及印制电路板、酒瓶等物体表面</td>
</tr>
<tr>
<td>医学影像分析</td>
<td>核磁共振图像、虹膜图像、眼底视网膜图像等医学图像中检测可能病变的区域</td>
</tr>
<tr>
<td>高光谱图像处理</td>
<td>海面船舶检测、地面异常区域检测、机场飞机定位</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="二-异常的定义以及常见的异常类型"><a href="#二-异常的定义以及常见的异常类型" class="headerlink" title="二. 异常的定义以及常见的异常类型"></a>二. 异常的定义以及常见的异常类型</h3><h4 id="2-1-异常的定义"><a href="#2-1-异常的定义" class="headerlink" title="2.1 异常的定义"></a>2.1 异常的定义</h4><ul>
<li><p>异常，又被称作<strong>离群值</strong>，是一个在<strong>数据挖掘</strong>领域常见的概念。</p>
</li>
<li><p>Hawkins等将一场定义为<strong>与其余观测结果完全不同，以至于怀疑其是由不同机制产生的观测值</strong>。</p>
</li>
<li><p>异常样本分为3个类别：点异常、上下文异常、集群异常。</p>
<ul>
<li>点异常：某些严重偏离正常数据分布范围的观测值。</li>
</ul>
  <img src="/2023/03/18/%E5%9B%BE%E5%83%8F%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E7%BB%BC%E8%BF%B0/点异常.png" style="zoom:67%;">
  
<ul>
<li>上下文异常：该观测值虽在正常数据分布范围内，但联合周围数据一起分析就会表现出显著异常。</li>
</ul>
  <img src="/2023/03/18/%E5%9B%BE%E5%83%8F%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E7%BB%BC%E8%BF%B0/上下文异常.png" alt="上下文异常" style="zoom:67%;">
  
<ul>
<li>集群异常：又称模式异常。由一系列观测结果聚合而成并且与正常数据存在差异。在该类异常中，可能单独看其中任意一个点都不属于异常。但当一系列点一起出现是，就属于异常。</li>
<li><img src="/2023/03/18/%E5%9B%BE%E5%83%8F%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E7%BB%BC%E8%BF%B0/%E9%9B%86%E7%BE%A4%E5%BC%82%E5%B8%B8.png"></li>
</ul>
</li>
</ul>
<h4 id="2-2-图像数据的异常种类"><a href="#2-2-图像数据的异常种类" class="headerlink" title="2.2 图像数据的异常种类"></a>2.2 图像数据的异常种类</h4><ul>
<li><p>图像数据中每一个像素点上的像素值就对应着一个观测结果。</p>
</li>
<li><p>大部分图像异常检测任务中，需联合分析<strong>图像背景</strong>以及<strong>周围像素信息</strong>来进行分类。</p>
</li>
<li><p>图像异常检测任务根据异常的形态，可以分为：定性异常的分类、定量异常的定位，两个类别。</p>
<ul>
<li>定性异常的分类，类似于传统图像识别任务中，<strong>图像分类任务</strong>。<ul>
<li>整体地给出是否异常的判断。  <img src="/2023/03/18/%E5%9B%BE%E5%83%8F%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E7%BB%BC%E8%BF%B0/图象异常分类.png" alt="图象异常分类" style="zoom:42%;"></li>
</ul>
</li>
<li>定量异常的定位，类似于<strong>目标检测</strong>或<strong>图像分割任务</strong>。<ul>
<li>需要得到异常区域的位置信息。根据具体的图像背景，又可分为以下几类：<ul>
<li>均匀背景：内容较为单一的场景。eg：磨砂玻璃表面对局部缺陷的定位 or 深色山区图像中对盘山公路的定位。</li>
<li>纹理背景：主要出现在工业生产领域。根据纹理形态又可分为：<strong>简单纹理、周期性纹理、随即纹理</strong>。共3种。<ul>
<li>简单纹理：因光照和材质反光等因素影响，在原本均匀的物体表面产生的一些非均匀的纹理背景。eg：钢板表面图像。</li>
<li>周期性纹理：各类由大量重复单元组成的具有显著周期性的图像。eg：布匹图像。</li>
<li>随即纹理：由无规则结构组成的图像背景。eg：声呐和纳米材料图像。</li>
</ul>
</li>
<li>结构背景：一类更为广泛的图像背景。一般具有结构复杂、个体差异大、语义信息丰富等特点，需进行整体分析。eg：各种医学图像。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="三-图像异常检测研究现状"><a href="#三-图像异常检测研究现状" class="headerlink" title="三. 图像异常检测研究现状"></a>三. 图像异常检测研究现状</h3><p>  基于传统方法的异常检测技术分为大致6个类别：模板匹配、统计模型、图像分解、频域分析、稀疏编码重构、分类面构建。<br>  基于深度学习的方法大致包含4个类别：距离度量、分类面构建、图像重构、结合传统方法。</p>
<h4 id="3-1-基于传统方法的异常检测技术"><a href="#3-1-基于传统方法的异常检测技术" class="headerlink" title="3.1 基于传统方法的异常检测技术"></a>3.1 基于传统方法的异常检测技术</h4><p>  基于传统方法的异常检测技术分为大致6个类别：模板匹配、统计模型、图像分解、频域分析、稀疏编码重构、分类面构建。</p>
<h5 id="3-1-1-基于模板匹配的异常检测方法"><a href="#3-1-1-基于模板匹配的异常检测方法" class="headerlink" title="3.1.1 基于模板匹配的异常检测方法"></a>3.1.1 基于模板匹配的异常检测方法</h5><ul>
<li>现有的方法大致分为：<strong>点特征匹配、线匹配、区域匹配</strong>。3大类别。</li>
</ul>
<ol>
<li><p>点特征匹配中：</p>
<ul>
<li>人工设计的特征提取方法：Harris特征、尺度不变特征变换（Scale invariant feature transform，SIFT）、仿射尺度不变特征变换（Affine scale invariant feature transform，ASIFT）</li>
<li>结合机器学习进行特征点提取的改良方法：加速分割测试特征（Featrures from accelerated segment test-enhanced repeatability，FAST-ER）、时间不变学习检测器（Temporally invariant leaned detector，TILDE 	）</li>
</ul>
</li>
<li><p>线匹配中：</p>
<ul>
<li>通过提取直线特征进行匹配：均值-标准差线描述符 (Meanstandard deviationline descriptor, MSLD)、条带描述符 (Lineband descriptor, LBD)</li>
<li>采用曲线匹配方法：Xia等、Wolfson等。</li>
<li><strong>线特征相比于点特征</strong>：包含更多的场景信息和结构信息，但也会面临边缘特征不明显和线段断裂等问题。</li>
</ul>
</li>
<li><p>区域匹配方法：</p>
<ul>
<li>相比于前两种方法，包含最为完整的图像信息，具有更好的鲁棒性。</li>
<li>早期方法：归一化积相关 和 平均绝对差等算法。</li>
<li>近期较为常用还包括了： Korman 等 提出的快速匹配算法（Fast affine template matching，FAST-Match） 和 Jia 等  提出的适用于彩色图像匹配的彩色快速匹配算法（Fastaffine template matching for colour images ，CFAST-Match）</li>
<li>近年来有一些利用深度学习进行区域匹配的方法：Han 等 通过对图像区域进行特征提取和相似性度量以实现图像匹配；也有方法不进行相似性度量, 如 Balntas 等 利用三元损失对网络进行特征提取的训练</li>
</ul>
</li>
<li><p>在图像异常检测领域中，有很多相关方法利用图像匹配技术进行异常检测</p>
<ul>
<li>Chen等 提取了待测图像和模板图像的Hu矩阵作为特征，对三维打印零件进行异常与否的分类。</li>
<li>Vaikundam等 先提取图像的SIFT特征，利用聚类算法进行描述符筛选之后，找到最为匹配的正常图像作为模板来进行异常区域的定位。</li>
<li>Herwig等 通过中值滤波创建模板图像来检测钢材表面的异常区域。</li>
<li>Tsai等 对于空域模板匹配方法容易受到诸如光照变化和正常图像间微小差异的影响的问题，通过比较待检图像和模板图像经傅里叶变换后的频域分量来定位印制电路板（Printed circuit board，PCB）上细微的缺陷。</li>
</ul>
</li>
<li><p>但模板匹配的方法一般适用于<strong>图像采集环境稳定且可控的场景</strong></p>
<ul>
<li>如PCB板表面的异常检测中，虽然结构复杂但内容基本保持不变。</li>
<li>而在更多情况下，即使是正常图像之间，也会存在较多的差异，便难以通过模板匹配实现异常检测。</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Reading essay</category>
      </categories>
  </entry>
  <entry>
    <title>小白用Hexo搭建个人博客指北</title>
    <url>/2023/03/22/%E5%B0%8F%E7%99%BD%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8C%97/</url>
    <content><![CDATA[<h1 id="零基础小白在Windows端使用Hexo部署到Github搭建个人博客指北"><a href="#零基础小白在Windows端使用Hexo部署到Github搭建个人博客指北" class="headerlink" title="零基础小白在Windows端使用Hexo部署到Github搭建个人博客指北"></a>零基础小白在Windows端使用Hexo部署到Github搭建个人博客指北</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  博主什么都不会！查了很多资料终于搭建完成了（意味着全靠大佬。在此整合一下，也期待能帮到别人。</p>
<span id="more"></span>

<h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1-1-安装Nodejs"><a href="#1-1-安装Nodejs" class="headerlink" title="1.1 安装Nodejs"></a>1.1 安装Nodejs</h3><ol>
<li>下载Nodejs：<code>https://nodejs.org/en/</code></li>
<li>安装完后会有两个组件：1. 是npm包管理器；2.是Nodejs本身。</li>
<li>以管理员身份打开cmd，输入：<ul>
<li>查看node版本：<code>node -v</code></li>
<li>查看npm包管理器版本：<code>npm -v</code></li>
</ul>
</li>
</ol>
<h3 id="1-2-注册Github"><a href="#1-2-注册Github" class="headerlink" title="1.2 注册Github"></a>1.2 注册Github</h3><ol>
<li>进入Github官网<code>https://github.com</code>。</li>
<li>点击右上角的“Sign up”。</li>
<li>填写注册资料。有一些注意事项如下：<ul>
<li>用户昵称建议用自己有特色的、好用的，这个名字将会是你以后博客的网址名称。</li>
<li>电子邮箱地址不要乱填，要填常用的，并且一会要发激活链接到你的邮箱。</li>
<li>用户密码，要确保15个字符或至少8个字符。</li>
</ul>
</li>
<li>Github提供了免费版和专业版，可以选择免费版，不影响博客的搭建与使用。</li>
<li>兴趣选择界面，随便选择 or 认真选择，不影响后续。</li>
<li>验证邮箱：Github会发送一条邮件到你的邮箱，点击蓝色链接验证。</li>
<li>创建一个仓库，根据提示填表即可。</li>
</ol>
<h3 id="1-3-其余软件"><a href="#1-3-其余软件" class="headerlink" title="1.3 其余软件"></a>1.3 其余软件</h3><ol>
<li>Hexo下创建的都是Markdown(.md)文档，博主用<strong>Typroa</strong>进行编辑，也可以用VScode或Vim进行编辑。</li>
<li>后期修改配置文件时，博主用<strong>VScode</strong>进行编辑，也可以用记事本直接打开。</li>
</ol>
<h2 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h2><h3 id="2-1-安装国内镜像"><a href="#2-1-安装国内镜像" class="headerlink" title="2.1 安装国内镜像"></a>2.1 安装国内镜像</h3><ol>
<li>因为国内安装镜像源很慢，所以利用npm安装cnpm</li>
<li>打开该文件夹，右键 -&gt; Git Bash Here。</li>
<li>用以下淘宝链接进行安装：<ul>
<li><code>npm install -g cnpm --registry=https://registry.npm.taobao.prg</code></li>
<li>查看cnpm版本：<code>cnpm -v</code></li>
</ul>
</li>
</ol>
<h3 id="2-2-安装Hexo框架"><a href="#2-2-安装Hexo框架" class="headerlink" title="2.2 安装Hexo框架"></a>2.2 安装Hexo框架</h3><ul>
<li><code>cnpm install -g hexo-cli</code></li>
<li>输入<code>hexo -v</code>进行验证</li>
</ul>
<h2 id="三、使用Hexo在本地搭建博客"><a href="#三、使用Hexo在本地搭建博客" class="headerlink" title="三、使用Hexo在本地搭建博客"></a>三、使用Hexo在<em>本地</em>搭建博客</h2><h3 id="3-1-搭建本地博客框架"><a href="#3-1-搭建本地博客框架" class="headerlink" title="3.1 搭建本地博客框架"></a>3.1 搭建本地博客框架</h3><ol>
<li>新建一个blog文件夹，所有博客的东西都在这个文件夹里。</li>
<li>初始化博客，输入<code>hexo init</code>，出现<code>Start blogging with Hexo!</code>即安装成功。</li>
<li>使用<code>ls</code>查看所有子目录。</li>
<li>启动博客：<code>hexo s</code>（此为启动本地服务）。</li>
<li>在浏览器输入<code>localhost:4000</code>即可查看本地博客。</li>
</ol>
<ul>
<li>一些注释：<ul>
<li><code>hexo s</code>就是<code>hexo server</code>，在hexo中可以用此命令启动预览。</li>
<li>初始博客搭载了Landscape主题，后期可自行更换</li>
<li>若搭建出了问题，可直接把第1步的整个blog文件夹全部删除，不要只删除文件夹里面的文件，留下空文件夹会出问题。</li>
</ul>
</li>
</ul>
<h3 id="3-2-创建第一篇博客（非必须）"><a href="#3-2-创建第一篇博客（非必须）" class="headerlink" title="3.2 创建第一篇博客（非必须）"></a>3.2 创建第一篇博客（非必须）</h3><ol>
<li>在Git界面输入<code>hexo new yourblogname</code>，“yourblogname”处输入你起的名字，在最新版的Git中可直接输入中文。</li>
<li>在<code>myblog\source\_posts</code>目录下可找到你刚创建的.md文件。</li>
<li>接着依次输入：</li>
</ol>
<ul>
<li><code>hexo clean</code> </li>
<li><code>hexo g</code></li>
<li><code>hexo s</code></li>
</ul>
<ol start="4">
<li>最后在浏览器刷新<code>https://localhost:4000</code>即可看到本地博客</li>
</ol>
<h2 id="四、部署到远端的Github上公开使用"><a href="#四、部署到远端的Github上公开使用" class="headerlink" title="四、部署到远端的Github上公开使用"></a>四、部署到远端的Github上公开使用</h2><h3 id="4-1-登陆自己的Github"><a href="#4-1-登陆自己的Github" class="headerlink" title="4.1 登陆自己的Github"></a>4.1 登陆自己的Github</h3><h3 id="4-2-新建一个仓库。"><a href="#4-2-新建一个仓库。" class="headerlink" title="4.2 新建一个仓库。"></a>4.2 新建一个仓库。</h3><ol>
<li>仓库的名称是<code>你的Github昵称.github.io</code>。<ul>
<li>例：我的Github昵称是Dogoz，那么我在此应输入<code>dogoz.github.io</code>。</li>
<li>注意：<strong>用户部署个人博客的GitHub仓库的命名必须符合以上特定要求</strong>。</li>
</ul>
</li>
<li>下拉，选择“Public”；</li>
<li>点击“Create repository”；</li>
</ol>
<h3 id="4-3-连接Github"><a href="#4-3-连接Github" class="headerlink" title="4.3 连接Github"></a>4.3 连接Github</h3><h4 id="4-3-1-创建账号和密匙"><a href="#4-3-1-创建账号和密匙" class="headerlink" title="4.3.1 创建账号和密匙"></a>4.3.1 创建账号和密匙</h4><ol>
<li>右键点击桌面，选择”Git Bash Here“。</li>
<li>输入<code>git config --global user.name &quot;Github 用户名&quot; </code></li>
<li>输入<code>git config --global user.email &quot;GitHub 邮箱&quot; </code></li>
<li>创建SSH密匙：输入<code>ssh-keygen -t rsa -C &quot;Github 邮箱&quot;</code>，然后一直回车。</li>
</ol>
<h4 id="4-3-2-添加密匙"><a href="#4-3-2-添加密匙" class="headerlink" title="4.3.2 添加密匙"></a>4.3.2 添加密匙</h4><ol>
<li>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</li>
<li>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</li>
<li>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</li>
</ol>
<h4 id="4-3-3-验证连接"><a href="#4-3-3-验证连接" class="headerlink" title="4.3.3 验证连接"></a>4.3.3 验证连接</h4><ol>
<li>打开Git Bash，输入<code>ssh -T git@github.com</code>，当出现”Are you sure…“，输入yes回车确认。</li>
<li>显示”Hi xxx！You’ve successfully……” 即连接成功。</li>
</ol>
<h3 id="4-4-部署Hexo到Github-Pages"><a href="#4-4-部署Hexo到Github-Pages" class="headerlink" title="4.4 部署Hexo到Github Pages"></a>4.4 部署Hexo到Github Pages</h3><ol>
<li>安装hexo-deployer-git：输入<code>npm install hexo-deployer-git --save</code></li>
<li>修改<code>_config.yml </code>文件末尾的 Deployment 部分，修改成如下：<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> git@github.com:用户名/用户名.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure></li>
<li>完成后运行<code>hexo d</code>，将网站上传部署到Github Pages。</li>
</ol>
<h2 id="恭喜你，此时访问Https-用户名-github-io，即可看到你的博客网站啦！"><a href="#恭喜你，此时访问Https-用户名-github-io，即可看到你的博客网站啦！" class="headerlink" title="恭喜你，此时访问Https://用户名.github.io，即可看到你的博客网站啦！"></a>恭喜你，此时访问<code>Https://用户名.github.io</code>，即可看到你的博客网站啦！</h2>]]></content>
      <categories>
        <category>Set up a blog</category>
        <category>Procedure</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>美好的问候！</title>
    <url>/2023/03/16/%E7%BE%8E%E5%A5%BD%E7%9A%84%E9%97%AE%E5%80%99%EF%BC%81/</url>
    <content><![CDATA[<p>这是我的第一篇博文，是整个人生中的第一篇。</p>
<span id="more"></span>
<p>在前段时间，我曾注册过一个网站用以记录我的学习生活。但很可惜还没有发出第一篇博文，就被我注销了。<br>我当时给它起名叫“Dogz的家”，尽管它生命短暂，但它的离去仍让我惋惜哀伤。<br>它也教会了我很多东西，才使得我能相对轻松地搭建起我现在这个博客网页。</p>
<p>我希望我能够善待、善用它；希望可以为我的学习、生活、工作提供一个留下美好回忆和宝贵知识的地方。</p>
]]></content>
      <categories>
        <category>Chat</category>
        <category>blessing</category>
      </categories>
  </entry>
  <entry>
    <title>z某报考</title>
    <url>/2023/03/20/%E7%BF%9F%E6%99%93%E5%9D%A4%E6%8A%A5%E8%80%83/</url>
    <content><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p>z某的报考记录</p>
<span id="more"></span>



<h2 id="天津"><a href="#天津" class="headerlink" title="天津"></a>天津</h2><h3 id="天津大学-380"><a href="#天津大学-380" class="headerlink" title="天津大学 380"></a>天津大学 380</h3><ul>
<li>数一 英一</li>
</ul>
<h3 id="南开大学-370"><a href="#南开大学-370" class="headerlink" title="南开大学 370"></a>南开大学 370</h3><ul>
<li>数二 英二</li>
</ul>
<h3 id="天津工业大学-360"><a href="#天津工业大学-360" class="headerlink" title="天津工业大学 360"></a>天津工业大学 360</h3><ul>
<li>数二 英二</li>
</ul>
<h2 id="上海"><a href="#上海" class="headerlink" title="上海"></a>上海</h2><h3 id="华东理工大学-345"><a href="#华东理工大学-345" class="headerlink" title="华东理工大学 345"></a>华东理工大学 345</h3><ul>
<li>数二 英二</li>
</ul>
<h3 id="东华大学-360"><a href="#东华大学-360" class="headerlink" title="东华大学 360"></a>东华大学 360</h3><ul>
<li>数一 英二</li>
</ul>
<h3 id="华东师范大学-380"><a href="#华东师范大学-380" class="headerlink" title="华东师范大学 380"></a>华东师范大学 380</h3><ul>
<li>数二 英二 数字电路</li>
<li>保护双非</li>
</ul>
<h3 id="上海大学-360"><a href="#上海大学-360" class="headerlink" title="上海大学 360"></a>上海大学 360</h3><ul>
<li>数二 英二 模拟电子电路</li>
</ul>
<h3 id="上海科技大学-350"><a href="#上海科技大学-350" class="headerlink" title="上海科技大学 350"></a>上海科技大学 350</h3><ul>
<li>数一 英一</li>
</ul>
]]></content>
      <categories>
        <category>assist</category>
        <category>register</category>
      </categories>
  </entry>
</search>
